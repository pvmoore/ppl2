[17:11:31.791] [  -1] Module[refs=2] test_literals
[17:11:31.791] [   6]    'new' Function[refs=1] (GLOBAL)
[17:11:31.791] [   6]       {} (type={void->void})
[17:11:31.791] [   6]          Arguments
[17:11:31.791] [   8]    'testLiterals' Function[refs=1] (GLOBAL)
[17:11:31.791] [   8]       {} (type={void->void})
[17:11:31.791] [   8]          Arguments
[17:11:31.791] [   9]          Call Target: FUNC booleans {void->void}
[17:11:31.791] [  10]          Call Target: FUNC integers {void->void}
[17:11:31.791] [  11]          Call Target: FUNC realNumbers {void->void}
[17:11:31.791] [  12]          Call Target: FUNC chars {void->void}
[17:11:31.791] [  13]          Call Target: FUNC strings {void->void}
[17:11:31.791] [  15]    'booleans' Function[refs=1] (GLOBAL)
[17:11:31.791] [  15]       {} (type={void->void})
[17:11:31.791] [  15]          Arguments
[17:11:31.791] [  16]          Variable[refs=1] 'b' bool (LOCAL)
[17:11:31.791] [  16]             Initialiser (type=bool)
[17:11:31.791] [  16]                ASSIGN (type=bool)
[17:11:31.791] [  16]                   ID:b (type=bool)
[17:11:31.791] [  -1]                   0 (type=const bool)
[17:11:31.791] [  17]          Variable[refs=1] 'b2' bool (LOCAL)
[17:11:31.791] [  17]             Initialiser (type=bool)
[17:11:31.791] [  17]                ASSIGN (type=bool)
[17:11:31.791] [  17]                   ID:b2 (type=bool)
[17:11:31.791] [  17]                   1 (type=const bool)
[17:11:31.791] [  19]          Variable[refs=1] 'b3' bool (LOCAL)
[17:11:31.791] [  19]             Initialiser (type=bool)
[17:11:31.791] [  19]                ASSIGN (type=bool)
[17:11:31.791] [  19]                   ID:b3 (type=bool)
[17:11:31.791] [  19]                   1 (type=const bool)
[17:11:31.791] [  22]    'integers' Function[refs=1] (GLOBAL)
[17:11:31.791] [  22]       {} (type={void->void})
[17:11:31.791] [  22]          Arguments
[17:11:31.791] [  23]          Variable[refs=1] 'by' byte (LOCAL)
[17:11:31.791] [  23]             Initialiser (type=byte)
[17:11:31.791] [  23]                ASSIGN (type=byte)
[17:11:31.791] [  23]                   ID:by (type=byte)
[17:11:31.791] [  -1]                   0 (type=const byte)
[17:11:31.791] [  24]          Variable[refs=1] 'by2' byte (LOCAL)
[17:11:31.791] [  24]             Initialiser (type=byte)
[17:11:31.791] [  24]                ASSIGN (type=byte)
[17:11:31.791] [  24]                   ID:by2 (type=byte)
[17:11:31.791] [  24]                   100 (type=const byte)
[17:11:31.791] [  26]          Variable[refs=1] 's' short (LOCAL)
[17:11:31.792] [  26]             Initialiser (type=short)
[17:11:31.792] [  26]                ASSIGN (type=short)
[17:11:31.792] [  26]                   ID:s (type=short)
[17:11:31.792] [  -1]                   0 (type=const short)
[17:11:31.792] [  27]          Variable[refs=1] 's2' short (LOCAL)
[17:11:31.792] [  27]             Initialiser (type=short)
[17:11:31.792] [  27]                ASSIGN (type=short)
[17:11:31.792] [  27]                   ID:s2 (type=short)
[17:11:31.792] [  27]                   1 (type=const byte)
[17:11:31.792] [  29]          Variable[refs=1] 'i' int (LOCAL)
[17:11:31.792] [  29]             Initialiser (type=int)
[17:11:31.792] [  29]                ASSIGN (type=int)
[17:11:31.792] [  29]                   ID:i (type=int)
[17:11:31.792] [  -1]                   0 (type=const int)
[17:11:31.792] [  30]          Variable[refs=1] 'i2' int (LOCAL)
[17:11:31.792] [  30]             Initialiser (type=int)
[17:11:31.792] [  30]                ASSIGN (type=int)
[17:11:31.792] [  30]                   ID:i2 (type=int)
[17:11:31.792] [  30]                   3 (type=const byte)
[17:11:31.792] [  32]          Variable[refs=1] 'l' long (LOCAL)
[17:11:31.792] [  32]             Initialiser (type=long)
[17:11:31.792] [  32]                ASSIGN (type=long)
[17:11:31.792] [  32]                   ID:l (type=long)
[17:11:31.792] [  -1]                   0 (type=const long)
[17:11:31.792] [  33]          Variable[refs=1] 'l2' long (LOCAL)
[17:11:31.792] [  33]             Initialiser (type=long)
[17:11:31.792] [  33]                ASSIGN (type=long)
[17:11:31.792] [  33]                   ID:l2 (type=long)
[17:11:31.792] [  33]                   45 (type=const byte)
[17:11:31.792] [  35]    'realNumbers' Function[refs=1] (GLOBAL)
[17:11:31.792] [  35]       {} (type={void->void})
[17:11:31.792] [  35]          Arguments
[17:11:31.792] [  36]          Variable[refs=1] 'h' half (LOCAL)
[17:11:31.792] [  36]             Initialiser (type=half)
[17:11:31.792] [  36]                ASSIGN (type=half)
[17:11:31.792] [  36]                   ID:h (type=half)
[17:11:31.792] [  -1]                   0.000000 (type=const half)
[17:11:31.792] [  37]          Variable[refs=1] 'h2' half (LOCAL)
[17:11:31.792] [  37]             Initialiser (type=half)
[17:11:31.792] [  37]                ASSIGN (type=half)
[17:11:31.792] [  37]                   ID:h2 (type=half)
[17:11:31.792] [  37]                   3.140000 (type=const half)
[17:11:31.792] [  38]          Variable[refs=1] 'h3' half (LOCAL)
[17:11:31.792] [  38]             Initialiser (type=half)
[17:11:31.792] [  38]                ASSIGN (type=half)
[17:11:31.792] [  38]                   ID:h3 (type=half)
[17:11:31.792] [  38]                   3.140000 (type=const half)
[17:11:31.792] [  39]          Variable[refs=1] 'h4' half (LOCAL)
[17:11:31.792] [  39]             Initialiser (type=half)
[17:11:31.792] [  39]                ASSIGN (type=half)
[17:11:31.792] [  39]                   ID:h4 (type=half)
[17:11:31.792] [  39]                   0.000000 (type=const half)
[17:11:31.792] [  41]          Variable[refs=1] 'f' float (LOCAL)
[17:11:31.792] [  41]             Initialiser (type=float)
[17:11:31.792] [  41]                ASSIGN (type=float)
[17:11:31.792] [  41]                   ID:f (type=float)
[17:11:31.792] [  -1]                   0.000000 (type=const float)
[17:11:31.792] [  42]          Variable[refs=1] 'f2' float (LOCAL)
[17:11:31.792] [  42]             Initialiser (type=float)
[17:11:31.792] [  42]                ASSIGN (type=float)
[17:11:31.792] [  42]                   ID:f2 (type=float)
[17:11:31.792] [  42]                   3.140000 (type=const float)
[17:11:31.792] [  43]          Variable[refs=1] 'f3' float (LOCAL)
[17:11:31.792] [  43]             Initialiser (type=float)
[17:11:31.792] [  43]                ASSIGN (type=float)
[17:11:31.792] [  43]                   ID:f3 (type=float)
[17:11:31.792] [  43]                   3.140000 (type=const float)
[17:11:31.792] [  44]          Variable[refs=1] 'f4' float (LOCAL)
[17:11:31.792] [  44]             Initialiser (type=float)
[17:11:31.792] [  44]                ASSIGN (type=float)
[17:11:31.792] [  44]                   ID:f4 (type=float)
[17:11:31.793] [  44]                   0.000000 (type=const float)
[17:11:31.793] [  46]          Variable[refs=1] 'd' double (LOCAL)
[17:11:31.793] [  46]             Initialiser (type=double)
[17:11:31.793] [  46]                ASSIGN (type=double)
[17:11:31.793] [  46]                   ID:d (type=double)
[17:11:31.793] [  -1]                   0.000000 (type=const double)
[17:11:31.793] [  47]          Variable[refs=1] 'd2' double (LOCAL)
[17:11:31.793] [  47]             Initialiser (type=double)
[17:11:31.793] [  47]                ASSIGN (type=double)
[17:11:31.793] [  47]                   ID:d2 (type=double)
[17:11:31.793] [  47]                   3.140000 (type=const double)
[17:11:31.793] [  48]          Variable[refs=1] 'd3' double (LOCAL)
[17:11:31.793] [  48]             Initialiser (type=double)
[17:11:31.793] [  48]                ASSIGN (type=double)
[17:11:31.793] [  48]                   ID:d3 (type=double)
[17:11:31.793] [  48]                   3.140000 (type=const double)
[17:11:31.793] [  49]          Variable[refs=1] 'd4' double (LOCAL)
[17:11:31.793] [  49]             Initialiser (type=double)
[17:11:31.793] [  49]                ASSIGN (type=double)
[17:11:31.793] [  49]                   ID:d4 (type=double)
[17:11:31.793] [  49]                   0.000000 (type=const double)
[17:11:31.793] [  51]    'chars' Function[refs=1] (GLOBAL)
[17:11:31.793] [  51]       {} (type={void->void})
[17:11:31.793] [  51]          Arguments
[17:11:31.794] [  52]          Variable[refs=1] 'ch1' int (LOCAL)
[17:11:31.794] [  52]             Initialiser (type=int)
[17:11:31.794] [  52]                ASSIGN (type=int)
[17:11:31.794] [  52]                   ID:ch1 (type=int)
[17:11:31.794] [  52]                   97 (type=const int)
[17:11:31.794] [  53]          Variable[refs=1] 'ch2' int (LOCAL)
[17:11:31.794] [  53]             Initialiser (type=int)
[17:11:31.794] [  53]                ASSIGN (type=int)
[17:11:31.794] [  53]                   ID:ch2 (type=int)
[17:11:31.794] [  53]                   10 (type=const int)
[17:11:31.794] [  55]    'strings' Function[refs=1] (GLOBAL)
[17:11:31.794] [  55]       {} (type={void->void})
[17:11:31.794] [  55]          Arguments
[17:11:31.794] [  56]          Variable[refs=2] 's' string (LOCAL)
[17:11:31.794] [  56]             Initialiser (type=string)
[17:11:31.794] [  56]                Dot (type=string*)
[17:11:31.794] [  56]                   ID:s (type=string)
[17:11:31.794] [  56]                   Call Target: STRUCTFUNC core.string.new {string* this->string*}
[17:11:31.794] [  56]                      AddressOf (string*)
[17:11:31.794] [  56]                         ID:s (type=string)
[17:11:31.794] [  57]          Variable[refs=0] 's1' string (LOCAL)
[17:11:31.794] [  57]             Initialiser (type=string)
[17:11:31.794] [  57]                "hello " (type=string)
[17:11:31.794] [  58]          Variable[refs=0] 's2' string (LOCAL)
[17:11:31.794] [  58]             Initialiser (type=string)
[17:11:31.794] [  58]                r"there " (type=string)
[17:11:31.794] ==============================================
[17:11:31.794] ======================== Unresolved Nodes (0)
[17:11:31.794] ==============================================
