
import core.intrinsics
import test_imports

public

struct M1 = [
    //foo = {
    //    return 3
    //}
    foo = <T> { T a ->
        return 4
    }
]

testTemplateFunctions = {
    globals = {
        // templated global functions
        assert 1 == func<int>(3)
        assert 1 == func<float>(3.1)
        // untemplated global function
        assert 2 == func(3.2)

        // imported templated global functions
        assert 10 == tfunc<bool>(true)
        // imported untemplated global fucntion
        assert 20 == tfunc(3.1)
    }
    closures = {

    }
    structs = {

    }
    globals()
    closures()
    structs()

    //M1 m
}

func = <T> { T a ->
    return 1
}
func = { float a ->
    return 2
}
