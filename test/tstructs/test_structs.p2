/**
 *  Test accessing struct members.
 */
struct Fruit {
private
    int a
readonly
    int b = 1   // This initialisation will be moved to 'new' func
    //short b // duplicate
public
    bool isABanana
    //static int ss = 3

    new { /* Fruit* this */
        // All struct var initialisers will be put in here
        // This will be called before properties are set manually during initialisation

        b += 3
    }
    foo { /* Fruit* this */
        boo(inc:1)
    }
    bar { /* Fruit* this, */ int a ->
        struct Vegetable {bool isGreen}
        isABanana = true
        return a
    }
    baz { /* Fruit* this, */ bool sing ->
        int loc
        localFunc { /* Fruit* this, */
            // inner func
        }

        z += 1
    }
    int z
    boo { /* Fruit* this, */ float inc ->


        this.a += 1
    }
    retThis {
        return this
    }
    //static foobar = { int a ->
    //}
}
struct Colour {
    // new() function created automatically

    new {}
    new { int a ->

    }
    new { int thing, bool a, int b ->

    }
}

int global = 99

public testStructs {
    Fruit t

    t.a += 2

    t.foo()
    //t.boo(3.1)
    
    //Fruit::foobar(1)

    t.retThis().foo()

    //Colour col
    
    import tstructs::test_inner_structs
    testInnerStructs()
}
